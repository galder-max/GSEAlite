library(GSEAlite)
?GSEA.listofgenes
r<-     GSEA.listofgenes(m,lG,o,100)
r$r0
r$rR
kk<-sapply(r$rR,function(x) x$essmax)
dim(kk)
is(kk)
k
kk
head(r$rR)
kk<-lapply(1:length(r$r0),function(y) sapply(r$rR,function(x) x[[y]]$essmax))
dim(kk)
dim(kk[[1]])
length(r$r0)
str(kk)
kk<-sapply(1:length(r$r0),function(y) sapply(r$rR,function(x) x[[y]]$essmax))
dim(kk)
m<-matrix(rnorm(12),3,4)
m
m/1:4
m<-matrix(1:12,3,4)
m/1:4
m
t(t(m)/1:4)
computeFDR(r)
computeFDR(r)
computeFDR(r)
?GSEA.listofgenes
?GSEA.listofgenes
computeFDR(r)
computeFDR(r)
q()
n
source("/Users/Maxime/Desktop/GSEA/GSEA.R
"-
source("/Users/Maxime/Desktop/GSEA/GSEA.R")
?package.skeleton
package.skeleton(name="hizejg",list=ls(),path="/Users/Maxime/Desktop/")
package.skeleton(name="hizejg",list=ls(),path="/Users/Maxime/Desktop/")
package.skeleton(name="hizejg",list=ls(),path="/Users/Maxime/Desktop/")
?GSEA.listofgenes
q()
n
colnames(M)
colnames(M)[vec?prim]
colnames(M)[vec.prim]
vec.norm
colnames(M)
sort(colnames(M))
coeffs.
coeffs
plot(M[,vec.prim[1]],rowMeans(M[,grepl("NLN",colnames(M))]),pch=".")
plot(M[,vec.prim[1]],rowMeans(M[,grepl("NLN",colnames(M))]),pch=".")
plot(M[,vec.meta[1]],rowMeans(M[,grepl("NLN",colnames(M))]),pch=".")
computeFDR
gc()
rm(list=ls())
gc()
q()
n
library(GSEAlite)
?GSEA.listofgenes
     ##creates matrix of expression with rownames = gene names
     m<-matrix(rnorm(10*10000),10000,10)
     rownames(m)<-paste("r",1:10000)
     
     ## creates 2-level factor
     o<-as.factor(c(rep(1,5),rep(2,5)))
     
     
     ## creates list of 10 genesets of size 100
     lG<-lapply(1:10,function(x) paste("r",sample(1:10000,100,rep=F)))
     names(lG)<-paste("GS",1:10)
     
     
     ##perform GSEA analysis; may take ~1 minute for 1000 permutations;
     depending on your machine of course
     res<-GSEA.listofgenes(m,lG,o,100)
head(res$lRes)
(res$lRes)
computeFDRmedian(res)
args(GSEA.plot)
GSEA.plot(m,lG[[7]],o,nperms=10)
GSEA.plot(m,lG[[3]],o,nperms=10)
GSEA.plot(m,lG[[2]],o,nperms=10)
GSEA.plot(m,lG[[5]],o,nperms=10)
t<-read.csv("/Users/Maxime/Desktop/Functions/GSDB/c4.cm.gmt")
head(t)
t<-read.table("/Users/Maxime/Desktop/Functions/GSDB/c4.cm.gmt",sep="\t")
t<-read.table("/Users/Maxime/Desktop/Functions/GSDB/c4.cm.gmt",sep="\t",skip=2)
t<-read.csv("/Users/Maxime/Desktop/Functions/GSDB/c4.cm.gmt",sep="\t",skip=2)
t<-read.csv("/Users/Maxime/Desktop/Functions/GSDB/c4.cm.gmt",sep=" ",skip=2)
head(t)
dim(t)
t
?strsplit
t
k<-readgmt("/Users/Maxime/Desktop/Functions/GSDB/c3.gmt")
length(k)
names(k)
k[[1]]
k[[2]]
k[[3]]
str(k)
path.gmt<-"/Users/Maxime/Desktop/Functions/GSDB/c3.mir.gmt"
names.
?strsplit
str(names.)
str(names.)
names.
str(t)
ls()
?GSEA.plot
     m<-matrix(rnorm(10*10000),10000,10)
     rownames(m)<-paste("r",1:10000)
     o<-as.factor(c(rep(1,5),rep(2,5)))
     
     ## creating random geneset of size 100
     geneset<-paste("r",sample(1:10000,100,rep=F))
     
     ## plotting the GSEA running sum
     GSEA.plot(m,geneset,o,nperms=10)
     geneset<-paste("r",sample(1:1000,100,rep=F))
     m[1:1000,1:5]<-m[1:1000,1:5]+rnorm(1000*5,mean=2)

GSEA.plot(m,geneset,o,nperms=10)
?GSEA.listofgenes
     m<-matrix(rnorm(10*10000),10000,10)
     rownames(m)<-paste("r",1:10000)
     
     ## creates 2-level factor
     o<-as.factor(c(rep(1,5),rep(2,5)))
     
     
     ## creates list of 10 genesets of size 100
     lG<-lapply(1:10,function(x) paste("r",sample(1:10000,100,rep=F)))
     names(lG)<-paste("GS",1:10)
     
     
     ##perform GSEA analysis; may take ~1 minute for 1000 permutations;
     depending on your machine of course
     GSEA.listofgenes(m,lG,o,10)
q()
n
library(GSEAlite)
?GSEA.plot
?GSEA.plot
wilcox.test(c(abs(rnorm(21)),-abs(rnorm(4))),mean=0)$p.value
library(GSEAlite)
ls()
?GSEA.plot
GSEA.plot(m,geneset,o,nperms=100)
GSEA.plot(m,geneset,o,nperms=100)
GSEA.plot(m,geneset,o,nperms=1000)
GSEA.plot(m,geneset,o,nperms=1000)
?rug
q()
n
library(GSEAlite)
?GSEA.plot
?GSEA.plot
q()
n
library(GSEAlite)
q()
n
library(GSEAlite)
?GSEA.plot
?GSEA.plot
q()
n
library(GSEAlite)
     GSEA.plot(m,geneset,o,nperms=10)
q()
n
library(GSEAlite)
?GSEA.listofgenes
?readgmt
     m<-matrix(rnorm(10*10000),10000,10)
     rownames(m)<-paste("r",1:10000)
     
     ## creates 2-level factor
     o<-as.factor(c(rep(1,5),rep(2,5)))
     
     
     ## creates list of 10 genesets of size 100
     lG<-lapply(1:10,function(x) paste("r",sample(1:10000,100,rep=F)))
     names(lG)<-paste("GS",1:10)
     
     
     ##perform GSEA analysis; may take ~1 minute for 1000 permutations;
     ##depending on your machine of course
     res<-GSEA.listofgenes(m,lG,o,10)
computeFDRmedian
.compute.Statsmedian
GSEAlite:::.compute.Statsmedian
correctlocalQval
q()
n
